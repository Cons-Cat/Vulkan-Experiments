---
Checks: "bugprone-*,
         performance-*,
		 modernize-*,
		 readability-*,
		 misc-*,
		 # DISABLE SOME CHECKS:
		 -bugprone-easily-swappable-parameters, # I'm on the fence about this.
         -bugprone-reserved-identifier, # libCat needs to make some of these.
		 -performance-noexcept-move-constructor, # libCat doesn't have exceptions yet.
		 -modernize-avoid-c-arrays, # They're needed in some low-level code.
		 -modernize-use-auto, # I rather human judgement.
		 -readability-magic-numbers, # I rather human judgement.
		 -readability-identifier-length, # I rather human judgement.
		 -readability-uppercase-literal-suffix, # I prefer lowercase.
         -readability-function-cognitive-complexity, # I don't trust this.
		 -readability-convert-member-functions-to-static, # I rather human judgement.
		 -readability-named-parameter, # I'm on the fence about this.
         -readability-function-cognitive-complexity, # I rather human judgement.
         -misc-non-private-member-variables-in-classes, # This seems very bad.
		 -misc-unused-using-decls, # This isn't helpful for libraries.
        "

WarningsAsErrors: ''
HeaderFilterRegex: ^src
AnalyzeTemporaryDtors: false
FormatStyle: file

CheckOptions:
  - { key: readability-identifier-naming.VariableCase,            value: lower_case }
  - { key: readability-identifier-naming.MemberCase,              value: lower_case }
  - { key: readability-identifier-naming.FunctionCase,            value: lower_case }
  - { key: readability-identifier-naming.NamespaceCase,           value: lower_case }
  - { key: readability-identifier-naming.StructCase,              value: lower_case }
  - { key: readability-identifier-naming.ClassCase,               value: lower_case }
  - { key: readability-identifier-naming.TypeAliasCase,           value: lower_case }
  - { key: readability-identifier-naming.TypedefCase,             value: lower_case }
  - { key: readability-identifier-naming.PointerParameterPrefix,  value: p_ }
  - { key: readability-identifier-naming.LocalPointerPrefix,      value: p_ }
  - { key: readability-identifier-naming.LocalConstantPointerPrefix,     value: p_ }
  - { key: readability-identifier-naming.TemplateParameterIgnoredRegexp, value: '[A-Z]' }
  - { key: readability-identifier-naming.TypeAliasIgnoredRegexp,  value: '[A-Z]' }
  - { key: readability-identifier-naming.TypedefIgnoredRegexp,    value: '[A-Z]' }
  - { key: performance-unnecessary-value-param.AllowedTypes,      value: string;span;io_vector }
  - { key: readability-operators-representation.BinaryOperators,  value: '&&;&=;&;|;~;!;!=;||;|=;^;^=' }
...
